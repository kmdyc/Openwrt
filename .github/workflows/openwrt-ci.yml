#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
  # schedule:
    # - cron: 0 20 * * *
  release:
    types: [published]
  
jobs:
  build_openwrt:
    name: 云编译 / Build OpenWrt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      
      - name: 编译环境初始化
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
          df -h
          
      - name: 更新 feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 生成配置文件
        run: |
          rm -f ./.config*
          touch ./.config
          
          # 设置固件平台
          cat >> .config <<EOF
          CONFIG_TARGET_bcm27xx=y
          CONFIG_TARGET_bcm27xx_bcm2710=y
          CONFIG_TARGET_bcm27xx_bcm2710_DEVICE_rpi-3=y
          EOF
          
          # 设置中文包
          cat >> .config <<EOF
          CONFIG_LUCI_LANG_zh_Hans=y
          EOF
          
          # 开启RTC模块
          cat >> .config <<EOF
          CONFIG_PACKAGE_kmod-regmap-core=y
          CONFIG_PACKAGE_kmod-regmap-i2c=y
          CONFIG_PACKAGE_kmod-rtc-ds1307=y
          EOF
          
          # 启用DEOCKER-CE
          cat >> .config <<EOF
          CONFIG_PACKAGE_docker-ce=y
          EOF
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: 下载工具链
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: 编译固件
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
